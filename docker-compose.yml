version: "3"

networks:
  monitoring:

services:
  backend:
    build:
      context: .
      dockerfile: ./random_generator/Dockerfile
    env_file:
      - "random_generator/tests/.env"
    networks:
      - monitoring

  frontend:
    build:
      context: .
      dockerfile: ./random_generator_front_end/Dockerfile
    environment:
      STREAMLIT_CLIENT_TOOLBAR_MODE: "viewer"
      RANDOM_GENERATOR_FRONTEND_BACKEND_URL: "http://backend:8000"
    ports:
      - "8000:8000"
    expose:
      - 8000
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:v2.51.0
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    expose:
      - 9090
    ports:
      - "9090:9090"
    command: --config.file=/etc/prometheus/prometheus.yml
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9090/status || exit 1" ]
      interval: 10s
      timeout: 15s
      start_period: 15s
      retries: 3
    networks:
      - monitoring


  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
    - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    - ./grafana/tables:/etc/grafana/provisioning/tables
    entrypoint:
      - sh
      - -ec
      - |
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Random-Generator
          type: prometheus
          access: proxy
          orgId: 1
          url: http://prometheus:9090
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - monitoring
